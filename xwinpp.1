.\" Manpage of xwinpp/v0.1.1.0
.\" written with GNU Emacs/v24.3.1 and markdown-mode/v2.0
.\" generated with Ronn/v0.7.3
.
.TH "XWINPP" "1" "2014-06-14" "0.1.1.0" "User Manual"
.
.SH "NAME"
\fBxwinpp\fR \- prepare a list of X windows\.
.
.SH "SYNOPSIS"
xwinpp \-I (\-B|\-b) [\-D|\-P|\-t|\-V] (\-h|\-p|\-S|\-v)
.
.SH "REQUIREMENT"
GNU bash, GNU sed, xprop, xwininfo
.
.SH "DESCRIPTION"
\fBxwinpp\fR(1) is a bash shell script, that takes a list of X window ids and performs some actions on it\. Mainly, \fBxwinpp\fR(1) was written to process a preparing output with variables on that list\. A typical output looks like this:
.
.IP "" 4
.
.nf

 desk_curr=0
 desk_select=(0)
 win_active=0x2400022
 win_active_geo_x_y=(840,699)
 win_active_geo_w_h=(837,349)
 win_active_frame_extents=0,0,0,0
 win_active_tags=null
 win_xid=(0x2000002 0x1800003 0x2800003 0x2400022)
 win_number=4
 win_geo_x_y=(0,1 0,1 0,1 840,699)
 win_geo_w_h=(1680,1049 1680,1049 1680,1049 837,349)
 win_frame_extents=(0,0,0,0 0,0,0,0 0,0,0,0 0,0,0,0)
 win_tags=(null null null null)
.
.fi
.
.IP "" 0
.
.SH "OPTIONS"
.
.TP
\fB\-B\fR, \fB\-\-hidden\fR
Select windows, which are hidden\. A window is hidden, if \fI_NET_WM_STATE_HIDDEN\fR is set\.
.
.TP
\fB\-b\fR, \fB\-\-visible\fR
Select windows, which are visible\. A window is visible, if \fI_NET_WM_STATE_HIDDEN\fR is not set\.
.
.TP
\fB\-D\fR, \fB\-\-desk=\fR \fIDESK\fR\.\.\.
Select windows, which are on \fIDESK\fR\. By default, windows on current desktop are used\.
.
.TP
\fB\-h\fR, \fB\-\-help\fR
Display a short help\.
.
.TP
\fB\-I\fR, \fB\-\-input\-file=\fR \fIFILE\fR or hyphen (\-)
Obtain X window ids from \fIFILE\fR\. If \fIFILE\fR is a hyphen, get output by reading from standard input\.
.
.TP
\fB\-P\fR, \fB\-\-win\-active\-pos=\fR \fIPOS\fR
By default, \fBxwinpp\fR(1) processes X window ids in order of input\. To specify the position of active window in the output use this option together with \fB\-p\fR\.
.
.TP
\fB\-t\fR, \fB\-\-tags=\fR \fITTAG\fR\.\.\.
Select windows, which are tagged with \fITTAG\fR\.
.
.TP
\fB\-v\fR, \fB\-\-version\fR
Print current version of \fBxwinpp\fR(1)\.
.
.TP
\fB\-V\fR, \fB\-\-win\-active=\fR \fIXID\fR
By default, \fBxwinpp\fR(1) uses \fI_NET_ACTIVE_WINDOW\fR to find the active window out\. To specify another window, you can use this option\.
.
.SH "SUBCOMNMANDS"
.
.TP
\fB\-p\fR, \fB\-\-print\fR
Print a preparing output with variables\. You can specify the output with above options\.
.
.TP
\fB\-S\fR, \fB\-\-set\fR \fISTAG\fR
Set or unset window property \fI_XWINPP_TAGS\fR\.
.
.SH "ARGUMENTS"
.
.TP
\fIDESK\fR
\fBcurr\fR or relative to the current desktop \fBnext\fR or \fBpreview\fR\. To specify a desktop number (starts at 0) use the prefix \fBi:\fR; a desktop name is prefixed with \fBs:\fR\. Examples: \fBi:0\fR; \fBs:web\fR; \fB\'s:some stuff\'\fR\. To select more than one tag, seperate it with a comma like \fBi:0,i:1,s:web\fR\.
.
.TP
\fIFILE\fR
File may be a regular file or a named pipe\.
.
.TP
\fIPOS\fR
Position of the active window in the output specified by an integer\. You may also write \fBstart\fR or \fBend\fR\. Position starts with \fB0\fR\.
.
.TP
\fISTAG\fR
You have to set all tags in \fI_XWINPP_TAGS\fR property at the same time\. To set a string with more than one tag, seperate it with a comma and prefix it with \fBtag:\fR\. Example: \fBtag:gui,viewer,pdf\fR\. To remove use only \fBtag:\fR\.
.
.TP
\fITTAG\fR
Tag, which was specified as \fI_XWINPP_TAGS\fR property in an X server\. To select more than one tag, seperate it with a comma\. Example: \fBgui,pdf\fR\.
.
.TP
\fIXID\fR
Numeric window identity\.
.
.SH "EXAMPLES"
.
.TP
To print a preparing output:
.
.IP "" 4
.
.nf

wmctrl \-l | xwinpp \-I \- \-p
wmctrl \-lx | grep xterm | xwinpp \-I \- \-p
xwinpp \-I \- \-p < <(wmctrl \-l)
xwinpp \-I \./tmp/xids \-p
xwinpp \-I <(wmctrl \-l) \-p
wmctrl \-l | XWINPP_WIN_ACTIVE=0x3000022 xwinpp \-I \- \-p
wmctrl \-l | xwinpp \-I \- \-V 0x3000022 \-p
.
.fi
.
.IP "" 0

.
.TP
To print a preparing output, but filter before:
.
.IP "" 4
.
.nf

wmctrl \-l | xwinpp print \-I \- \-b
wmctrl \-l | xwinpp print \-I \- \-D i:1
wmctrl \-l | xwinpp print \-I \- \-b \-D curr,next
wmctrl \-l | xwinpp print \-I \- \-B \-D s:web
wmctrl \-l | xwinpp print \-I \- \-t gui,pdf
.
.fi
.
.IP "" 0

.
.TP
To print a preparing output and reorder active win:
.
.IP "" 4
.
.nf

wmctrl \-l | xwinpp \-\-print \-I \- \-\-win\-active\-pos=end
wmctrl \-l | xwinpp \-p \-I \- \-P 1
.
.fi
.
.IP "" 0

.
.TP
To tag or untag windows with \fI_XWINPP_TAGS\fR property:
.
.IP "" 4
.
.nf

wmctrl \-l | xwinpp \-I \- \-S tag:office,audio,video
wmctrl \-l | xwinpp \-I \- \-D curr \-S tag:gui,viewer,pdf
wmctrl \-l | xwinpp \-I \- \-B \-S tag:
.
.fi
.
.IP "" 0

.
.SH "NOTES"
You can write all long commands and options without masking \-\-\. So, instead of \fB\-\-help\fR you may use \fBhelp\fR\.
.
.P
You do not have to use \fBwmctrl\fR(1) for fetching X window ids\. You can also use \fBxdotool\fR(1), \fBxlsclients\fR(1), \fBxwit\fR(1), \fBxwininfo\fR(1) or \fBxprop\fR(1)\. But ensure to get an input, which is separated by newline; X window ids must be in the first field and separated from second field with space character (delimiter=space)\. See also: \fBhttps://gist\.github\.com/D630/11346608\fR and \fBhttp://www\.ict\.griffith\.edu\.au/anthony/info/X/WindowID\.hints\fR\.
.
.P
\fI_NET_WM_STATE_HIDDEN\fR means, that a window is iconified/minimized\.
.
.SH "ENVIROMENT"
.
.TP
\fIXWINPP_WIN_ACTIVE\fR
You may use this variable instead option \fB\-V\fR\.
.
.TP
\fIXWINPP_INPUT_FILE\fR
Use this instead of option \fB\-I\fR\.
.
.SH "BUGS & REQUESTS"
Report it on \fBhttps://github\.com/D630/xwinpp/issues\fR
.
.SH "TODO"
See file \fBTODO\fR, which comes along with this programm\.
.
.SH "LICENSE"
\fBxwinpp\fR(1) is licensed with GNU GPLv3\. You should have received a copy of the GNU General Public License along with this program\. If not, see for more details \fBhttp://www\.gnu\.org/licenses/gpl\-3\.0\.html\fR\.
.
.SH "CHRONICLE"
First version (0\.1\.0\.0) was finished on: 2014\-02\-08\.
.
.SH "SEE ALSO"
bash(1), sed(1), x(7), xorg(1), xprop(1), xwininfo(1)
